// picoMIPS program for affine transformation algorithm  
// n = 8 bits, Isize = 9+n = 17 bits
// format: 3b opcode, 3b %d, 3b %s, 8b immediate or address
// 
// TODO 报告要求实现： 通过开关输入 通过LED灯显示，目前实现版本是全部从程序中读。 先实现这个版本在实现后续版本
// 仿射变换 公式：
//  | x2 |        | x1 |
//  | y2 |  = A * | y1 | + B
//   
//   A = | 0.75  0.5 |   B = | 20 |
//       | -0.5  0.75|       | -20 |   A与B是系数  是固定的，执行特定的仿射变换
// 
//BINARY  ////////////HEX////////// ASSEMBLER /////////
00000000000000000  //00000//NOP
10000100000000001  //10800//LOAD %1, %0, 1; //加载数字1到%1寄存器
00000000000000000  //00000//NOP
10001000000000001  //11000//LOAD %2, %0,1; //加载数字1到%2寄存器
00000000000000000  //00000//NOP
11101100101100000  //19960//MULI %3, %1, 0.75; // %3 = X1*0.75
11110001001000000  //1A240//MULI %4, %2, 0.5;	// %4 = Y1*0.5	  
01001110000000000  //05C00//ADD  %3, %4;       //%3 = %3+%4
11110100111000000  //19AC0//MULI %5, %1, -0.5; //%5 = X1*(-0.5)
11111001001100000  //1B260//MULI %6, %2, 0.75;	//%6 = Y1*0.75	 
01010111000000000  //06E00//ADD  %5, %6;       //%5 = %5+%6
11001101100010100  //15B14//ADDI %3, %3, 20;   //%3 = %3+20 + 系数 B
11010110111101100  //16DEC//ADDI %5, %5, -20;  //%5 = %5-20 + 系数 B
01001100000000000  //05800//ADD  %3, %0;       //%3 = %3+%0 
01010100000000000  //06800//ADD  %5, %0;       //%5 = %5+%0 
00000000000000000  //00000//NOP