// 测试版本 只用于检测程序是否有效
//  | x2 |        | x1 |
//  | y2 |  = A * | y1 | + B
//   
//   A = | 0.75  0.5 |   B = | 20 |
//       | -0.5  0.75|       | -20 |   A与B是系数  是固定的，执行特定的仿射变换
// 

// 指令LOAD测试
10000000000000000 // LOAD %0 %0 0 加载sw到1号寄存器
10000100000000000 // LOAD %1 &0 2 加载sw到2号寄存器
11101000101100000  //19960//MULI %2, %1, 0.75; // %2 = X1*0.75
11101101001000000  //1A240//MULI %3, %2, 0.5;	// %3 = Y1*0.5	
01001001100000000  //05C00//ADD  %2, %3;       //%2 = %2+%3
11110000111000000  //19AC0//MULI %4, %1, -0.5; //%4 = X1*(-0.5)
11110101001100000  //1B260//MULI %5, %2, 0.75;	//%5 = Y1*0.75	
01010010100000000  //06E00//ADD  %4, %5;       //%4 = %4+%5    目前为止%3 存 0.75 * x1 + 0.5*y1   %5 存 -0.5 * x1 + 0.75 * y1
11001001000010100  //15B14//ADDI %2, %2, 20;   //%2 = %2+20 + 系数 B
11010010011101100  //16DEC//ADDI %4, %4, -20;  //%4 = %4-20 + 系数 B

// 测试加法
//01001000100000000 // ADD %2 %1   %2 = %2+%1  加法 将2号和1号加起来给2号
// 测试加立即数
//11001000000000011 //ADDI %2 %0 3  此时%2应该是6
// 测试乘法
//11101000001100000 // MULI %2 %0 0.75 得出的结果应该是 4.5  00000100 只取整数部分
// reg8存数据
//01011101000000000  // ADD %7 %2 0  %7 = %7 + %2 